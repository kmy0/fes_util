# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr and automatically regenerate CMakeLists.txt
	include(cmkr.cmake OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)

	# Create a configure-time dependency on cmake.toml to improve IDE support
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

project(fes_util)

# Target: sol2
add_library(sol2 INTERFACE)

target_include_directories(sol2 INTERFACE
	"deps/sol2/include"
)

# Target: lua
set(lua_SOURCES
	"deps/lua/lapi.c"
	"deps/lua/lauxlib.c"
	"deps/lua/lbaselib.c"
	"deps/lua/lcode.c"
	"deps/lua/lcorolib.c"
	"deps/lua/lctype.c"
	"deps/lua/ldblib.c"
	"deps/lua/ldebug.c"
	"deps/lua/ldo.c"
	"deps/lua/ldump.c"
	"deps/lua/lfunc.c"
	"deps/lua/lgc.c"
	"deps/lua/linit.c"
	"deps/lua/liolib.c"
	"deps/lua/llex.c"
	"deps/lua/lmathlib.c"
	"deps/lua/lmem.c"
	"deps/lua/loadlib.c"
	"deps/lua/lobject.c"
	"deps/lua/lopcodes.c"
	"deps/lua/loslib.c"
	"deps/lua/lparser.c"
	"deps/lua/lstate.c"
	"deps/lua/lstring.c"
	"deps/lua/lstrlib.c"
	"deps/lua/ltable.c"
	"deps/lua/ltablib.c"
	"deps/lua/ltm.c"
	"deps/lua/lua.c"
	"deps/lua/luac.c"
	"deps/lua/lundump.c"
	"deps/lua/lutf8lib.c"
	"deps/lua/lvm.c"
	"deps/lua/lzio.c"
	cmake.toml
)

add_library(lua STATIC)

target_sources(lua PRIVATE ${lua_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${lua_SOURCES})

target_include_directories(lua PUBLIC
	"deps/lua"
)

# Target: reframework
set(reframework_SOURCES
	"deps/reframework/reframework/API.h"
	"deps/reframework/reframework/API.hpp"
)

add_library(reframework INTERFACE)

target_sources(reframework INTERFACE ${reframework_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${reframework_SOURCES})

target_include_directories(reframework INTERFACE
	"deps/reframework"
)

# Target: fes_util
set(fes_util_SOURCES
	"src/plugin.cpp"
	cmake.toml
)

add_library(fes_util SHARED)

target_sources(fes_util PRIVATE ${fes_util_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${fes_util_SOURCES})

target_compile_features(fes_util PUBLIC
	cxx_std_20
)

target_include_directories(fes_util PUBLIC
	src
)

target_link_libraries(fes_util PUBLIC
	lua
	sol2
	reframework
)

set(CMKR_TARGET fes_util)
set_target_properties(fes_util PROPERTIES
                      RUNTIME_OUTPUT_DIRECTORY_RELEASE ../bin
)
